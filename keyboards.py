from aiogram.enums import ChatType
from aiogram.types import KeyboardButton, CallbackQuery, ReplyKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def main_button():
    rkb = ReplyKeyboardBuilder()
    rkb.add(
        *[
            KeyboardButton(text='–ö–ª–∏–µ–Ω—Ç'),
            # KeyboardButton(text='–®–æ—Ñ—ë—Ä'),
            KeyboardButton(text="–ü–æ—á—Ç–∞ –±–æ—Ä"),
            KeyboardButton(text="–û–ø–µ—Ä–∞—Ç–æ—Ä –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à"),
        ]
    )
    rkb.adjust(2, 2)
    return rkb.as_markup(resize_keyboard=True)


def client_button(message):
    rkb = ReplyKeyboardBuilder()
    if message.chat.type == ChatType.PRIVATE:
        rkb.add(
            *[
                KeyboardButton(text='–ê–Ω–¥–∏–∂–æ–Ω -> –¢–æ—à–∫–µ–Ω—Ç'),
                KeyboardButton(text='–¢–æ—à–∫–µ–Ω—Ç -> –ê–Ω–¥–∏–∂–æ–Ω'),
                # KeyboardButton(text="–§–∞—Ä“ì–æ–Ω–∞ -> –¢–æ—à–∫–µ–Ω—Ç"),
                # KeyboardButton(text="–¢–æ—à–∫–µ–Ω—Ç -> –§–∞—Ä“ì–æ–Ω–∞"),
                # KeyboardButton(text='–ù–∞–º–∞–Ω–≥–∞–Ω -> –¢–æ—à–∫–µ–Ω—Ç'),
                # KeyboardButton(text="–¢–æ—à–∫–µ–Ω—Ç -> –ù–∞–º–∞–Ω–≥–∞–Ω"),

                KeyboardButton(text="–û—Ä—Ç–≥–∞")

            ]
        )
        rkb.adjust(2, 2)
    return rkb.as_markup(resize_keyboard=True)


def delivery_button(message):
    rkb = ReplyKeyboardBuilder()
    if message.chat.type == ChatType.PRIVATE:
        rkb.add(
            *[
                KeyboardButton(text='–ê–Ω–¥–∏–∂–æ–Ω => –¢–æ—à–∫–µ–Ω—Ç'),
                KeyboardButton(text='–¢–æ—à–∫–µ–Ω—Ç => –ê–Ω–¥–∏–∂–æ–Ω'),
                # KeyboardButton(text="–§–∞—Ä“ì–æ–Ω–∞ -> –¢–æ—à–∫–µ–Ω—Ç"),
                # KeyboardButton(text="–¢–æ—à–∫–µ–Ω—Ç -> –§–∞—Ä“ì–æ–Ω–∞"),
                # KeyboardButton(text='–ù–∞–º–∞–Ω–≥–∞–Ω -> –¢–æ—à–∫–µ–Ω—Ç'),
                # KeyboardButton(text="–¢–æ—à–∫–µ–Ω—Ç -> –ù–∞–º–∞–Ω–≥–∞–Ω"),

                KeyboardButton(text="–û—Ä—Ç–≥–∞")

            ]
        )
        rkb.adjust(2, 2)
    return rkb.as_markup(resize_keyboard=True)


def cancel_button(message):
    rkb = ReplyKeyboardBuilder()
    if message.chat.type == ChatType.PRIVATE:
        rkb.add(
            *[
                KeyboardButton(text="–ë–µ–∫–æ—Ä –∫–∏–ª–∏—à")

            ]
        )
        rkb.adjust(2, 2)

    return rkb.as_markup(resize_keyboard=True)


def cancel_button1(callback: CallbackQuery):
    rkb = ReplyKeyboardBuilder()
    if callback.message.chat.type == ChatType.PRIVATE:
        rkb.add(
            *[
                KeyboardButton(text="–ë–µ–∫–æ—Ä –∫–∏–ª–∏—à")

            ]
        )
        rkb.adjust(2, 2)

    return rkb.as_markup(resize_keyboard=True)


def confirm_button():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ “≤–∞", callback_data="confirm_yes"),
                InlineKeyboardButton(text="‚ùå –ô—û“õ", callback_data="confirm_no"),
            ]
        ]
    )
    return keyboard


def driver_button():
    keyboard = ReplyKeyboardBuilder()
    keyboard.add(
        KeyboardButton(text='üîâ –ñ–æ–π–Ω–∏ –±–µ–ª–≥–∏–ª–∞—à'),
        KeyboardButton(text=' üíº –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ —è–Ω–≥–∏–ª–∞—à'),
        KeyboardButton(text='üìû –ê–¥–º–∏–Ω –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à'),
        KeyboardButton(text='üìä –ú–µ–Ω–∏–Ω–≥ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏–º')
    )
    keyboard.adjust(2, 2)
    return keyboard.as_markup(resize_keyboard=True)


def admin_button():
    rkb = ReplyKeyboardBuilder()
    rkb.add(
        KeyboardButton(text='–†–µ–∫–ª–∞–º–∞ üîä'),
        KeyboardButton(text="–ê–¥–º–∏–Ω –ë—û–ª–∏–º–∏"),
        # KeyboardButton(text="üîÖ –ê -> –¢ –®–æ–ø–∏—Ä–ª–∞—Ä"),
        # KeyboardButton(text="üîÖ –¢ -> –ê –®–æ–ø–∏—Ä–ª–∞—Ä"),
    )
    rkb.adjust(2, 2)
    return rkb.as_markup(resize_keyboard=True)


# üîπ Tugmalar yaratish funksiyalari
def tariff_button():
    """ –¢–∞—Ä–∏—Ñ —Ç–∞–Ω–ª–∞—à —Ç—É–≥–º–∞–ª–∞—Ä–∏ """
    buttons = [
        [KeyboardButton(text="–°—Ç–∞–Ω–¥–∞—Ä—Ç"), KeyboardButton(text="–ö–æ–º—Ñ–æ—Ä—Ç")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)


def quantity_button():
    """ –û–¥–∞–º —Å–æ–Ω–∏–Ω–∏ —Ç–∞–Ω–ª–∞—à —Ç—É–≥–º–∞–ª–∞—Ä–∏ """
    buttons = [
        [KeyboardButton(text="1"), KeyboardButton(text="2")],
        [KeyboardButton(text="3"), KeyboardButton(text="4")],
        # [KeyboardButton(text="–ë–æ—à“õ–∞")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)


def register_button():
    keyboard = ReplyKeyboardBuilder()
    keyboard.add(KeyboardButton(text="–†—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∏—à"))
    return keyboard.as_markup(resize_keyboard=True)


def driver_location_button():
    keyboard = ReplyKeyboardBuilder()
    keyboard.add(KeyboardButton(text="–ê–Ω–¥–∏–∂–æ–Ω–¥–∞–º–∞–Ω"))
    keyboard.add(KeyboardButton(text="–¢–æ—à–∫–µ–Ω—Ç–¥–∞–º–∞–Ω"))
    keyboard.add(KeyboardButton(text="–û—Ä—Ç–≥–∞"))
    keyboard.adjust(2, 2)
    return keyboard.as_markup(resize_keyboard=True)
